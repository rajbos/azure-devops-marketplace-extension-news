name: Tweet Scheduled Build and Deploy

env:
  ArtifactName: 'AzDoNews'
  CharacterSet1: '"c", "d", "f"'
  CharacterSet2: '"g", "h", "j"'
  CharacterSet3: '"k", "l", "m", "n"'
  CharacterSet4: '"u", "w", "x", "y", "z"'
  CharacterSet5: '"l", "o", "p"'
  CharacterSet6: '"b"'
  CharacterSet7: '"r", "s", "t", "v"'
  CharacterSet8: '"ai", "ae", "ia", "ea"'
  CharacterSet9: '"1", "2", "3", "4", "5"'
  CharacterSet10: '"6", "7", "8", "9", "0"'

on:
  schedule:
    - cron: "* */4 * * *"
  workflow_dispatch:
  
  push:
   paths:
   - .github/workflows/deploy.yml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-${{ hashFiles('**/**.csproj') }}-1

    - name: Restore
      run: dotnet restore AzDoExtensionNews/AzDoExtensionNews.sln

    - name: Build
      run: dotnet build AzDoExtensionNews/AzDoExtensionNews.sln -c Release

    - name: Test
      run: dotnet test AzDoExtensionNews/AzDoExtensionNews.sln

    - name: Publish AzDo Artifact
      uses: actions/upload-artifact@v2
      with:
        path: publish/AzDo
        name: ${{ env.ArtifactName }}

  CharacterSet1:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Run Character Command
        uses: /.github/workflows/templates/
        with:
          characters: ${{ env.CharacterSet1 }}
          artifactName: ${{ env.ArtifactName }}

  CharacterSet2:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Run Character Command
        uses: "./.github/templates/character-to-run"
        with:
          characters: ${{ env.CharacterSet2 }}
          artifactName: ${{ env.ArtifactName }}

  CharacterSet3:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Run Character Command
        uses: "./.github/templates/character-to-run"
        with:
          characters: ${{ env.CharacterSet3 }}
          artifactName: ${{ env.ArtifactName }}

  CharacterSet4:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Run Character Command
        uses: "./.github/templates/character-to-run"
        with:
          characters: ${{ env.CharacterSet4 }}
          artifactName: ${{ env.ArtifactName }}

  CharacterSet5:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Run Character Command
        uses: "./.github/templates/character-to-run"
        with:
          characters: ${{ env.CharacterSet5 }}
          artifactName: ${{ env.ArtifactName }}

  CharacterSet6:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Run Character Command
        uses: "./.github/templates/character-to-run"
        with:
          characters: ${{ env.CharacterSet6 }}
          artifactName: ${{ env.ArtifactName }}

  CharacterSet7:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Run Character Command
        uses: "./.github/templates/character-to-run"
        with:
          characters: ${{ env.CharacterSet7 }}
          artifactName: ${{ env.ArtifactName }}

  CharacterSet8:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Run Character Command
        uses: "./.github/templates/character-to-run"
        with:
          characters: ${{ env.CharacterSet8 }}
          artifactName: ${{ env.ArtifactName }}

  CharacterSet9:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Run Character Command
        uses: "./.github/templates/character-to-run"
        with:
          characters: ${{ env.CharacterSet9 }}
          artifactName: ${{ env.ArtifactName }}

  CharacterSet10:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Run Character Command
        uses: "./.github/templates/character-to-run"
        with:
          characters: ${{ env.CharacterSet10 }}
          artifactName: ${{ env.ArtifactName }}

  ConsolidateTweet:
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ArtifactName }}

      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}

    #   - name: App Settings Variable Substitution
    #     uses: microsoft/variable-substitution@v1
    #     with:
    #       files: '${{steps.download.outputs.download-path}}/drop/GH/appsettings.json/appsettings.json'
    #     env:
    #       TwitterConsumerAPIKey: ${{ secrets.TwitterConsumerAPIKey }}
    #       TwitterConsumerAPISecretKey: ${{ secrets.TwitterConsumerAPISecretKey }}
    #       TwitterAccessToken: ${{ secrets.TwitterAccessToken }}
    #       TwitterAccessTokenSecret: ${{ secrets.TwitterAccessTokenSecret }}
    #       BlobStorageConnectionString: ${{ secrets.BlobStorageConnectionString }}

      # - name: Perform a Pester test from the command-line
      #   shell: pwsh
      #   run: |
      #     cd "${{steps.download.outputs.download-path}}/drop/GH/"
      #     dotnet .\GitHubActionsNews.dll "consolidate"


